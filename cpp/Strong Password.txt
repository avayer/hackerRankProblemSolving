// Complete the minimumNumber function below.
int minimumNumber(int n, string p) {
    bool shouldAddNum = true;
    bool shouldAddLcase = true;
    bool shouldAddUcase = true;
    bool shouldAddSchar = true;
    // Return the minimum number of characters to make the password strong
        for(int i=0; i<n; i++) {
            if(shouldAddNum) {
                if(int(p[i])>=48 && int(p[i])<=57) shouldAddNum = false;
            }
            if(shouldAddLcase) {
                if(int(p[i])>=97 && int(p[i])<=122) shouldAddLcase = false;
            }
            if(shouldAddUcase) {
                if(int(p[i])>=65 && int(p[i])<=90) shouldAddUcase = false;
            }
            if(shouldAddSchar) {
                if(int(p[i])==33 || int(p[i])==35 || int(p[i])== 64 || int(p[i])==36 ||
                int(p[i])==37 || int(p[i])==94 || int(p[i])==38 ||int(p[i])==42||
                int(p[i])==40||int(p[i])==41||int(p[i])==45||int(p[i])==43){ 
                shouldAddSchar = false;
                }
            }
        }
    int sum = shouldAddNum+shouldAddLcase+shouldAddUcase+shouldAddSchar;
    return (6-n>sum)? 6-n:sum;
}